fastlane_require 'dotenv'
default_platform(:android)
Dotenv.load('../../.env')


platform :android do
  
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do 
    build_app("1.0.0","1")
    apk_path =  lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
    crashlytics(apk_path: apk_path)
  end

  def build_app(version_name, version_code)
    bundle_android_assets = %(cd ../.. && yarn bundle_android_assets)
    bundle_android_sentry = %(cd ../.. && yarn bundle_android_sentry)
    app_identifier = get_application_id(ext_constant_name:"applicationId")
    set_version(version_code, version_name)
    gradle(task: "clean" )
    sh bundle_android_assets
    gradle(
      task: "assemble",
      build_type: "Release",
    )
    sh bundle_android_sentry
    create_sentry_release(app_identifier, version_code, version_name)
  end

   def set_version(version_code, version_name)
    android_set_version_name(version_name: version_name)
    android_set_version_code(version_code: version_code)
   end
   
   def create_sentry_release(app_identifier, version_code, version_name)
    sentry_create_release(
      version: version_name, 
      app_identifier: app_identifier,
    )
      sentry_upload_file(
      version: version_name,
      app_identifier: app_identifier,
      file: '../android.main.bundle'
    )
    sentry_upload_sourcemap(
      version: version_name,
      app_identifier: app_identifier,
      dist: version_code,
      sourcemap: '../android.main.bundle.map', 
      rewrite: true
    )
      sentry_finalize_release(
      version: version_name, 
      app_identifier: app_identifier,
    )
	end
end
